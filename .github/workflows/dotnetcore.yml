name: .NET Core

on:
  push:
    tags:
      - '*'

jobs:
  build:

    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v1
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.x'
    - name: Build win
      run: |
        dotnet publish /p:Configuration=ReleaseWIN64 /p:Platform="x64" -r win10-x64 /p:PublishSingleFile=false
        cd UnitystationLauncher/bin/x64/ReleaseWIN64/netcoreapp3.1/win10-x64/publish/ ; zip -r /home/runner/work/win.zip *
    - name: Build osx
      run: |
        dotnet publish /p:Configuration=ReleaseOSX /p:Platform="x64" -r osx-x64 /p:PublishSingleFile=false
        cd UnitystationLauncher/bin/x64/ReleaseOSX/netcoreapp3.1/osx-x64/publish/ ; zip -r /home/runner/work/osx.zip *
    - name: Build linux
      run: |
        dotnet publish /p:Configuration=ReleasePOSIX64 /p:Platform="x64" -r linux-x64 /p:PublishSingleFile=false
        cd UnitystationLauncher/bin/x64/ReleasePOSIX64/netcoreapp3.1/linux-x64/publish/ ; zip -r /home/runner/work/linux.zip *
    - name: Create a Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          Unitystation Hub Release
          draft: false
          prerelease: false
    - name: Upload Win Assets
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: /home/runner/work/win.zip
        asset_name: win.zip
        asset_content_type: application/zip
    - name: Upload OSX Asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: /home/runner/work/osx.zip
        asset_name: osx.zip
        asset_content_type: application/zip
    - name: Upload Linux Asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: /home/runner/work/linux.zip
        asset_name: linux.zip
        asset_content_type: application/zip

